spring.main.allow-circular-references=true
service.token.request.clientId=mosip-pms-client
service.token.request.issuerUrl=${mosipbox.public.url}/v1/authmanager/authenticate/clientidsecretkey

# ApplicationId for partner
mosip.pms.appId =partner

# Kernel auth client ID for partner management services
mosip.pms.clientId=mosip-pms-client

# Kernel auth secret key for partner management services
mosip.pms.secretKey= {cipher}4e22fb7201d82324263ff4fb91035e9d0462dffd76184184d554db962cab0840

mosip.iam.adapter.appid=mosip.pms.appId
mosip.iam.adapter.clientid=mosip.pms.clientId
mosip.iam.adapter.clientsecret=mosip.pms.secretKey
pmp.certificate.get.rest.uri=http://kernel-keymanager-service/v1/keymanager/getCertificate
pmp.partner.certificate.get.rest.uri=http://kernel-keymanager-service/v1/keymanager/getPartnerCertificate/{partnerCertId}

# For PMS Database 
mosip.pmp.database.hostname=postgres
mosip.pmp.database.port=80
mosip.pmp.database.user=pmsuser
mosip.pmp.database.password={cipher}6cbd7358f7a821132862475c16cf48e575c8e2c5f994fa7140ee08f364015b24

# ***************** PMS DB Postgres Properties ***********************
javax.persistence.jdbc.driverClassName=org.postgresql.Driver
javax.persistence.jdbc.driver=org.postgresql.Driver
javax.persistence.jdbc.url=jdbc:postgresql://${mosip.pmp.database.hostname}:${mosip.pmp.database.port}/mosip_pms
javax.persistence.jdbc.user=${mosip.pmp.database.user}
javax.persistence.jdbc.username=${mosip.pmp.database.user}
javax.persistence.jdbc.password=${mosip.pmp.database.password}
javax.persistence.jdbc.schema = pms
javax.persistence.jdbc.uinHashTable=uin_hash_salt
javax.persistence.jdbc.uinEncryptTable=uin_encrypt_salt

# *********** Hibernate Properties *************
hibernate.dialect=org.hibernate.dialect.PostgreSQL95Dialect
hibernate.jdbc.lob.non_contextual_creation=true
hibernate.hbm2ddl.auto=none
hibernate.show_sql=true
hibernate.format_sql=true
hibernate.connection.charSet=utf8
hibernate.cache.use_second_level_cache=false
hibernate.cache.use_query_cache=false
hibernate.cache.use_structured_entries=false
hibernate.generate_statistics=false
spring.datasource.initialization-mode=never

# websub properties
websub.publish.url=${mosipbox.public.url}/hub/
mosip.auth.filter_disable=false

#datashare properties
pms.certs.datashare.policyId=mpolicy-default-cert
pms.certs.datashare.subscriberId=mpartner-default-cert
pmp.certificaticate.datashare.rest.uri=${mosipbox.public.url}/v1/datashare/create

mosip.kernel.auth.appids.realm.map={prereg:'preregistration',ida:'mosip',registrationclient:'mosip',regproc:'mosip',partner:'mosip',resident:'mosip',admin:'mosip',crereq:'mosip',creser:'mosip',datsha:'mosip'}
auth.server.admin.allowed.audience=mosip-regproc-client,mosip-prereg-client,mosip-admin-client,mosip-pms-client,mosip-crereq-client,mosip-creser-client,mosip-datsha-client,mosip-ida-client,mosip-resident-client,mosip-reg-client

#------------------------Auth-Adapter-----------------------------------------------
auth.server.validate.url=http://kernel-auth-service/v1/authmanager/authorize/admin/validateToken
auth.server.admin.validate.url=http://kernel-auth-service/v1/authmanager/authorize/admin/validateToken
auth.jwt.secret=authjwtsecret
auth.jwt.base=Mosip-Token

# IAM
# mosipbox.public.url is Ansible defined
mosip.iam.module.login_flow.name=authorization_code
mosip.iam.module.clientID=mosip-pms-client
mosip.iam.module.clientsecret={cipher}4e22fb7201d82324263ff4fb91035e9d0462dffd76184184d554db962cab0840
mosip.iam.module.redirecturi=${mosipbox.public.url}/v1/partnermanager/login-redirect/
mosip.iam.module.login_flow.scope=cls
mosip.iam.module.login_flow.response_type=code
mosip.iam.authorization_endpoint=${mosipbox.public.url}/keycloak/auth/realms/mosip/protocol/openid-connect/auth
mosip.iam.module.admin_realm_id=mosip
mosip.kernel.filtervalue.max_columns =100
mosip.iam.token_endpoint=${mosipbox.public.url}/keycloak/auth/realms/mosip/protocol/openid-connect/token