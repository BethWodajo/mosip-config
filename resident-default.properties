# Follow properites have their values assigned via 'overrides' environment variables of config server docker.
# DO NOT define these in any of the property files.  They must be passed as env variables.  Refer to config-server
# helm chart:
# mosip.mosip.resident.client.secret
# mosip.mosip.regproc.client.secret
#--------------ID and Version --------------
auth.internal.id=mosip.identity.auth.internal
auth.internal.version=1.0
mosip.registration.processor.print.id=mosip.registration.print
mosip.registration.processor.application.version=1.0
vid.create.id=mosip.vid.create
resident.vid.version=v1
resident.revokevid.version=v1
resident.vid.id=mosip.resident.vid
auth.type.status.id=mosip.identity.authtype.status.update
resident.authlock.id=mosip.resident.authlock
resident.checkstatus.id=mosip.resident.checkstatus
resident.euin.id=mosip.resident.euin
resident.printuin.id=mosip.resident.printuin
resident.uin.id=mosip.resident.uin
resident.rid.id=mosip.resident.rid
resident.updateuin.id=mosip.resident.updateuin
resident.authunlock.id=mosip.resident.authunlock
resident.authhistory.id=mosip.resident.authhistory
mosip.resident.service.status.check.id=mosip.registration.external.status
mosip.resident.service.status.check.version=1.0
vid.revoke.id=mosip.vid.update
resident.revokevid.id=mosip.resident.vidstatus
PARTNER_REFERENCE_Id=mpartner-default-resident
APPLICATION_Id=RESIDENT
DECRYPT_API_URL=${mosip.kernel-keymanager-service.url}/v1/keymanager/decrypt

## Token generation
token.request.id=io.mosip.resident
resident.appid=resident
token.request.version=1.0
resident.clientId=mosip-resident-client
resident.secretKey=${mosip.mosip.resident.client.secret}
# Below is defined in application properties
token.request.issuerUrl=${mosip.keycloak.issuerUrl}

ida.online-verification-partner-id=mpartner-default-auth


## Auth Services
KERNELAUTHMANAGER=${mosip.kernel-auth-service.url}/v1/authmanager/authenticate/clientidsecretkey
REGPROCPRINT=${mosip.regproc-print-service.url}/registrationprocessor/v1/print/uincard
INTERNALAUTH=${mosip.ida-internal-service.url}/idauthentication/v1/internal/auth
INTERNALAUTHTRANSACTIONS=${mosip.ida-internal-service.url}/idauthentication/v1/internal/authTransactions
KERNELENCRYPTIONSERVICE=${mosip.ida-internal-service.url}/idauthentication/v1/internal/getCertificate
IDAUTHCREATEVID=${mosip.idrepo-vid-service.url}/idrepository/v1/vid
IDAUTHREVOKEVID=${mosip.idrepo-vid-service.url}/idrepository/v1/vid
## Notification service
IDREPOGETIDBYUIN=${mosip.idrepo-identity-service.url}/idrepository/v1/identity/idvid
IDREPOGETIDBYRID=${mosip.idrepo-identity-service.url}/idrepository/v1/identity/idvid
GETUINBYVID=${mosip.idrepo-vid-service.url}/idrepository/v1/vid
resident.notification.emails=mosiptestuser@gmail.com
resident.notification.message=Notification has been sent to the provided contact detail(s)
## templates
MASTER=${mosip.kernel-masterdata-service.url}/v1/masterdata
TEMPLATES=${MASTER}/templates
MACHINEDETAILS=${MASTER}/machines
MACHINESEARCH=${MASTER}/machines/search
MACHINECREATE=${MASTER}/machines
CENTERDETAILS=${MASTER}/registrationcenters
RIDGENERATION=${mosip.kernel-ridgenerator-service.url}/v1/ridgenerator/generate/rid
CREATEVID=${mosip.idrepo-vid-service.url}/idrepository/v1/vid
IDREPOSITORY=${mosip.idrepo-identity-service.url}/idrepository/v1/identity/
ENCRYPTURL=${mosip.kernel-keymanager-service.url}/v1/keymanager/encrypt
PACKETSIGNPUBLICKEY=${mosip.kernel-keymanager-service.url}/v1/keymanager/tpmsigning/publickey
MIDSCHEMAURL=${mosip.kernel-syncdata-service.url}/v1/syncdata/latestidschema

## Key manager api calls
mosip.resident.keymanager.encrypt-uri=${mosip.kernel-keymanager-service.url}/v1/keymanager/encrypt
mosip.resident.keymanager.decrypt-uri=${mosip.kernel-keymanager-service.url}/v1/keymanager/decrypt

# VID Policy url
mosip.resident.vid-policy-url=${config.server.file.storage.uri}mosip-vid-policy.json

#Master Data api calls
VALID_DOCUMENT_BY_LANGCODE_URL=${MASTER}/validdocuments/{langCode}
LOCATION_HIERARCHY_LEVEL_BY_LANGCODE_URL=${MASTER}/locationHierarchyLevels/{langcode}
IMMEDIATE_CHILDREN_BY_LOCATIONCODE_AND_LANGCODE_URL=${MASTER}/locations/immediatechildren/{locationcode}/{langcode}
LOCATION_INFO_BY_LOCCODE_AND_LANGCODE_URL=${MASTER}/locations/info/{locationcode}/{langcode}
REGISTRATION_CENTER_FOR_LOCATION_CODE_URL=${MASTER}/registrationcenters/{langcode}/{hierarchylevel}/names
REGISTRATION_CENTER_BY_LOCATION_TYPE_AND_SEARCH_TEXT_PAGINATED_URL=${MASTER}/registrationcenters/page/{langcode}/{hierarchylevel}/{name}
COORDINATE_SPECIFIC_REGISTRATION_CENTERS_URL=${MASTER}/getcoordinatespecificregistrationcenters/{langcode}/{longitude}/{latitude}/{proximitydistance}
APPLICANT_VALID_DOCUMENT_URL=${MASTER}/applicanttype/{applicantId}/languages
WORKING_DAYS_BY_REGISTRATION_ID=${MASTER}/workingdays/{registrationCenterID}/{langCode}
LATEST_ID_SCHEMA_URL =${MASTER}/idschema/latest

# DMZ service call
SYNCSERVICE=${mosip.regproc-status-service.url}/registrationprocessor/v1/registrationstatus/sync
PACKETRECEIVER=${mosip.regproc-group1-service.url}/registrationprocessor/v1/packetreceiver/registrationpackets
SMSNOTIFIER=${mosip.kernel-notification-service.url}/v1/notifier/sms/send
EMAILNOTIFIER=${mosip.kernel-notification-service.url}/v1/notifier/email/send
AUTHTYPESTATUSUPDATE=${mosip.idrepo-identity-service.url}/idrepository/v1/identity/authtypes/status
#Regitstration processor reprint service
#Registration status service
REGISTRATIONSTATUSSEARCH=${dmz.ingress.base.url}/registrationprocessor/v1/registrationstatus/externalstatus/search
resident.center.id=10001
resident.machine.id=10001
#Credential Req service
POLICY_REQ_URL=${mosip.pms-partner-manager-service.url}/v1/partnermanager/partners/{partnerId}/credentialtype/{credentialType}/policies
OTP_GEN_URL=${mosip.ida-internal-service.url}/idauthentication/v1/internal/otp
CREDENTIAL_STATUS_URL=${mosip.idrepo-credential-request-generator.url}/v1/credentialrequest/get/
CREDENTIAL_REQ_URL=${mosip.idrepo-credential-request-generator.url}/v1/credentialrequest/requestgenerator
CREDENTIAL_CANCELREQ_URL=${mosip.idrepo-credential-request-generator.url}/v1/credentialrequest/cancel/
CREDENTIAL_TYPES_URL=${mosip.idrepo-credential-service.url}/v1/credentialservice/types
PARTNER_API_URL=${mosip.pms-partner-manager-service.url}/v1/partnermanager/partners
mosip.kernel.masterdata.audit-url=http://mzworker0.sb:30080/v1/auditmanager/audits
mosip-prereg-host=${mosip.prereg.host}
mosp-prereg-ui-url=https://${mosip-prereg-host}/pre-registration-ui/


RETRIEVE_VIDS=${mosipbox.public.url}/idrepository/v1/vid/uin/


## Config data
resident.datetime.pattern=yyyy-MM-dd'T'HH:mm:ss.SSS'Z'
auth.types.allowed=demo,bio-Finger,bio-Iris,bio-FACE

resident.identityjson=identity-mapping.json
mosip.id.validation.identity.phone=^([6-9]{1})([0-9]{9})$
mosip.id.validation.identity.email=^[\\w-\\+]+(\\.[\\w]+)*@[\\w-]+(\\.[\\w]+)*(\\.[a-zA-Z]{2,})$

## Security
mosip.security.csrf-enable:false
mosip.security.secure-cookie:false

IDSchema.Version=0.1
id.repo.update=mosip.id.update
mosip.registration.processor.registration.sync.id=mosip.registration.sync
id.repo.vidType=Perpetual
token.request.appid=resident
token.request.clientId=mosip-resident-client
token.request.secretKey=${mosip.mosip.resident.client.secret}
objectstore.adapter.name=PosixAdapter

#TODO remove reg-client service accunt in production env
auth.server.admin.allowed.audience=mosip-resident-client,mosip-reg-client,mosip-admin-client

#Mapping Identity json to map with the applicant id json
registration.processor.identityjson=identity-mapping.json

#machine creation and search configs
resident.update-uin.machine-name-prefix = resident_machine_
resident.update-uin.machine-spec-id = 1001
resident.update-uin.machine-zone-code = MOR

#Auth Adapter rest template authentication configs
mosip.iam.adapter.appid=resident
mosip.iam.adapter.clientid=mosip-resident-client
mosip.iam.adapter.clientsecret=${mosip.mosip.resident.client.secret}
auth.server.admin.issuer.uri=${mosip.api.internal.url}/keycloak/auth/realms/

mosip.service-context=/resident/v1
mosip.service.end-points=/**/req/otp,/**/proxy/**/*,/**/req/validateOTP,/**/channel/verification-status,/**/req/credential/**,/**/req/card/*,/**/req/auth-history,/**/rid/check-status,/**/req/auth-lock,/**/req/auth-unlock,/**/req/update-uin,/**/req/print-uin,/**/req/euin,/**/credential/types,/**/vid/**,/**/req/policy/**,/**/aid/get-individual-id,/**/req/individualId/otp,/**/mock/**
mosip.service.exclude.auth.allowed.method=POST,GET,PATCH,PUT

mosip.ida.env=Production

#------------Request IDs---------------------
# The request IDs used in Resident REST APIs
mosip.resident.api.id.otp.request=mosip.identity.otp.internal
mosip.resident.api.id.auth=mosip.identity.auth.internal

#------------Request Versions---------------------
# The request versions used in Resident REST APIs
mosip.resident.api.version.otp.request=1.0
mosip.resident.api.version.auth=1.0

#Comma separated values of property keys to be exposed to /proxy/config/ui-properties API
resident.ui.propertyKeys=mosip.mandatory-languages,mosip.optional-languages,mosip.utc-datetime-pattern,mosip.iam.adapter.clientid,resident.datetime.pattern,mosip.resident.api.id.otp.request,mosip.resident.api.id.auth,mosip.resident.api.version.otp.request,mosip.resident.api.version.auth,resident.vid.version,resident.revokevid.version,resident.vid.id,resident.revokevid.id,auth.type.status.id,resident.updateuin.id,resident.authunlock.id,resident.authhistory.id



#IdRepo Identity call
IDREPO_IDENTITY_URL=${mosip.idrepo-identity-service.url}/idrepository/v1/identity/idvid/{id}

#Pre-reg application service call
PREREG_TRANSLITERATION_URL=${mosip.prereg-application-service.url}/preregistration/v1/transliteration/transliterate

javax.persistence.jdbc.driver=org.postgresql.Driver
javax.persistence.jdbc.url=jdbc:postgresql://dev.mosip.net:30090/mosip_resident
javax.persistence.jdbc.user=residentuser
javax.persistence.jdbc.password=${db.dbuser.password}


auth.allowed.urls=https://${mosip.api.internal.url}/

# IAM
mosip.iam.module.login_flow.name=authorization_code
mosip.iam.module.clientID=${mosip.iam.adapter.clientid}
mosip.iam.module.clientsecret=${mosip.iam.adapter.clientsecret}
mosip.iam.module.redirecturi=${mosip.api.internal.url}/resident/v1/login-redirect/
#mosip.iam.module.redirecturi=${tempuri}/v1/admin/login-redirect/
#mosip.iam.module.login_flow.scope=cls
mosip.iam.module.login_flow.scope=ida_token individual_id
mosip.iam.module.login_flow.response_type=code
mosip.iam.authorization_endpoint=${keycloak.external.host}/auth/realms/mosip/protocol/openid-connect/auth
mosip.iam.module.admin_realm_id=mosip
mosip.iam.token_endpoint=${keycloak.external.host}/auth/realms/mosip/protocol/openid-connect/token
mosip.iam.userinfo_endpoint=${keycloak.external.host}/auth/realms/mosip/protocol/openid-connect/userinfo
mosip.iam.certs_endpoint=${keycloak.external.host}/auth/realms/mosip/protocol/openid-connect/certs


# Object Store configuration
mosip.resident.object.store.account-name=resident
mosip.resident.object.store.bucket-name=resident
mosip.resident.object.store.adapter-name=s3Adapter

# Key manager encryption/decryption configuration
mosip.resident.keymanager.application-name=RESIDENT
mosip.resident.keymanager.reference-id=resident_document

# Virus Scanner configuration
mosip.resident.virus-scanner.enabled=true


# Resident UI Schema JSON file name
resident-ui-schema-file-name=resident-ui-schema.json
# IDA Mapping JSON file URI
resident-ui-schema-file-url=${config.server.file.storage.uri}${resident-ui-schema-file-name} 
# Resident UI Schema JSON file property source
resident-ui-schema-file-source=url:${resident-ui-schema-file-url}

# Open ID Connect based resident user-info claim attributes
mosip.resident.identity.claim.individual-id=individual_id
mosip.resident.identity.claim.ida-token=ida_token


#Scopes
mosip.scope.resident.getinputattributevalues=${mosip.resident.identity.claim.individual-id}
mosip.scope.resident.patchrevokevid=${mosip.resident.identity.claim.individual-id},${mosip.resident.identity.claim.ida-token}
mosip.scope.resident.postgeneratevid=${mosip.resident.identity.claim.individual-id}
mosip.scope.resident.getvids=${mosip.resident.identity.claim.individual-id}
mosip.scope.resident.getAuthTransactions=${mosip.resident.identity.claim.individual-id}
mosip.scope.resident.postAuthTypeUnlock=${mosip.resident.identity.claim.individual-id}
mosip.scope.resident.postAuthTypeStatus=${mosip.resident.identity.claim.individual-id}
mosip.scope.resident.getAuthLockStatus=${mosip.resident.identity.claim.individual-id}
mosip.scope.resident.patchUpdateUin=${mosip.resident.identity.claim.individual-id}
mosip.scope.resident.postUploadDocuments=${mosip.resident.identity.claim.individual-id}
mosip.scope.resident.getUploadedDocuments=${mosip.resident.identity.claim.individual-id}
mosip.scope.resident.getServiceAuthHistoryRoles=${mosip.resident.identity.claim.individual-id}
mosip.scope.resident.getCheckAidStatus=${mosip.resident.identity.claim.individual-id}
mosip.scope.resident.getServiceRequestUpdate=${mosip.resident.identity.claim.individual-id}
mosip.scope.resident.getPartnersByPartnerType=${mosip.resident.identity.claim.individual-id}
mosip.scope.resident.postSendPhysicalCard=${mosip.resident.identity.claim.individual-id}


# Identity Mapping JSON file name
identity-mapping-file-name=identity-mapping.json
# IDA Mapping JSON file URI
identity-mapping-file-url=${config.server.file.storage.uri}${identity-mapping-file-name} 
# Identity Mapping JSON file property source
identity-mapping-file-source=url:${identity-mapping-file-url}



# Identity Data format MVEL file name
resident-data-format-mvel-file-name=identity-data-formatter.mvel
resident-data-format-mvel-file-url=${config.server.file.storage.uri}${resident-data-format-mvel-file-name} 
resident-data-format-mvel-file-source=url:${resident-data-format-mvel-file-url}



# WebSub Topic
resident.websub.authtype-status.secret={cipher}8cee1868024e9c525f44b977b31b8b70a9ba510f85dc9d4bab1491c9b2b96da9
resident.websub.authtype-status.topic=AUTH_TYPE_STATUS_UPDATE_ACK
resident.websub.callback.authtype-status.relative.url=${server.servlet.context-path}/callback/authTypeCallback
resident.websub.callback.authtype-status.url=${mosip.api.internal.url}/${resident.websub.callback.authtype-status.relative.url}
# Callback properties for AuthTransactionStatus
resident.websub.authTransaction-status.secret={cipher}8cee1868024e9c525f44b977b31b8b70a9ba510f85dc9d4bab1491c9b2b96da9
resident.websub.authTransaction-status.topic=AUTHENTICATION_TRANSACTION_STATUS
resident.websub.callback.authTransaction-status.relative.url=${server.servlet.context-path}/callback/authTransaction
resident.websub.callback.authTransaction-status.url=${mosip.api.internal.url}/${resident.websub.callback.authTransaction-status.relative.url}

#--------------------------------TokenId generator---------------------------------------------------#
mosip.kernel.tokenid.uin.salt=zHuDEAbmbxiUbUShgy6pwUhKh9DE0EZn9kQDKPPKbWscGajMwf
mosip.kernel.tokenid.partnercode.salt=yS8w5Wb6vhIKdf1msi4LYTJks7mqkbmITk2O63Iq8h0bkRlD0d
#------------------------------------

# Partner Service URL
mosip.pms.pmp.partner.rest.uri=${mosip.pms-partner-manager-service.url}/v1/partnermanager/partners?partnerType=Online_Verification_Partner


#Mask functions
resident.email.mask.function=maskEmail
resident.phone.mask.function=maskPhone

#property for dateOfBirth
resident.dateofbirth.pattern=yyyy/MM/dd

resident.documents.category=individualBiometrics

RESIDENT_REQ_CREDENTIAL_URL=${mosip.resident-service.url}/resident/v1/req/credential/status/

#order card payment
mosip.resident.order.card.payment.enabled=true

#Check Order Status URL
GET_ORDER_STATUS_URL=${mosip.resident-service.url}/resident/v1/mock/print-partner/check-order-status

DIGITAL_CARD_STATUS_URL=${mosip.resident-service.url}/resident/v1/mock/rid-digital-card/
mosip.resident.service.mock.pdf.url=https://uidai.gov.in/images/New_eAadhaar1.pdf
